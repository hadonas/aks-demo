apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
  namespace: sungho
spec:
  replicas: 1
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      imagePullSecrets:
      - name: acr-registry
      containers:
      - name: backend
        image: ktech4.azurecr.io/aks-demo-backend:latest
        ports:
        - containerPort: 5000
        env:
        - name: MARIADB_HOST
          value: "sungho-mariadb"
        - name: MARIADB_USER
          value: "testuser"
        - name: MARIADB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: backend-secrets
              key: MARIADB_PASSWORD
        - name: REDIS_HOST
          value: "redis-master.default.svc.cluster.local"
        - name: REDIS_REPLICA_HOST
          value: "redis-replicas.default.svc.cluster.local"
        - name: KAFKA_SERVERS
          value: "my-kafka:9092"
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: backend-secrets
              key: REDIS_PASSWORD
        - name: KAFKA_USERNAME
          value: "user1"
        - name: KAFKA_PASSWORD
          valueFrom:
            secretKeyRef:
              name: backend-secrets
              key: KAFKA_PASSWORD
        - name: FLASK_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: backend-secrets
              key: FLASK_SECRET_KEY
        # OpenTelemetry 환경변수
        - name: OTEL_EXPORTER_OTLP_ENDPOINT
          value: "http://collector-opentelemetry-collector.otel-collector-rnr.svc.cluster.local:4317"
        - name: OTEL_SERVICE_NAME
          value: "aks-demo-backend"
        - name: OTEL_SERVICE_VERSION
          value: "1.0.0"
        - name: OTEL_RESOURCE_ATTRIBUTES
          value: "service.name=aks-demo-backend,service.version=1.0.0,deployment.environment=production"
        - name: OTEL_EXPORTER_OTLP_PROTOCOL
          value: "grpc"
---
apiVersion: v1
kind: Service
metadata:
  name: backend-service
  namespace: sungho
spec:
  type: ClusterIP
  selector:
    app: backend
  ports:
  - port: 5000
    targetPort: 5000 